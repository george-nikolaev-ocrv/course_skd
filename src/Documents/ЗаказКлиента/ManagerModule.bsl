
// Процедура заполняет табличный документ для печати.
//
// Параметры:
//	ТабДок - ТабличныйДокумент - табличный документ для заполнения и печати.
//	Ссылка - Произвольный - содержит ссылку на объект, для которого вызвана команда печати.
Процедура СчетНаОплату(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(СчетНаОплату)
	Макет = Документы.ЗаказКлиента.ПолучитьМакет("СчетНаОплату");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказКлиента.Номер,
		|	ЗаказКлиента.Дата,
		|	ЗаказКлиента.Клиент,
		|	ЗаказКлиента.Менеджер,
		|	ЗаказКлиента.Сумма,
		|	ЗаказКлиента.Состав.(
		|		НомерСтроки,
		|		Номенклатура,
		|		Цена,
		|		Количество,
		|		Сумма)
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСоставШапка = Макет.ПолучитьОбласть("СоставШапка");
	ОбластьСостав = Макет.ПолучитьОбласть("Состав");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());	
		ТабДок.Вывести(ОбластьСоставШапка);
		ВыборкаСостав = Выборка.Состав.Выбрать();
		Пока ВыборкаСостав.Следующий() Цикл
			ОбластьСостав.Параметры.Заполнить(ВыборкаСостав);
			ТабДок.Вывести(ОбластьСостав, ВыборкаСостав.Уровень());
		КонецЦикла;
		
		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);	
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры

// Процедура заполняет табличный документ для печати.
//
// Параметры:
//	ТабДок - ТабличныйДокумент - табличный документ для заполнения и печати.
//	Ссылка - Произвольный - содержит ссылку на объект, для которого вызвана команда печати.
Процедура Счет(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Счет)
	Макет = Документы.ЗаказКлиента.ПолучитьМакет("Счет");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказКлиента.Номер,
		|	ЗаказКлиента.Дата,
		|	ЗаказКлиента.Клиент,
		|	ЗаказКлиента.Менеджер,
		|	ЗаказКлиента.Сумма,
		|	ЗаказКлиента.Состав.(
		|		НомерСтроки,
		|		Номенклатура,
		|		Цена,
		|		Количество,
		|		Сумма)
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСоставШапка = Макет.ПолучитьОбласть("СоставШапка");
	ОбластьСостав = Макет.ПолучитьОбласть("Состав");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());	
		ТабДок.Вывести(ОбластьСоставШапка);
		ВыборкаСостав = Выборка.Состав.Выбрать();
		Пока ВыборкаСостав.Следующий() Цикл
			ОбластьСостав.Параметры.Заполнить(ВыборкаСостав);
			ТабДок.Вывести(ОбластьСостав, ВыборкаСостав.Уровень());
		КонецЦикла;
		
		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);	
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры

Процедура СчетНаОплату2(ТабДок, Ссылка, ИмяВарианта) Экспорт

	Схема = ПолучитьМакет("ПечатныеФормыДокумента");
	Настройки = Схема.ВариантыНастроек.Найти(ИмяВарианта).Настройки;
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Ссылка", Ссылка);	
	

	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки); 	
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ТабДок);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры